[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 3 products, 1 sources, 2 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/hello.scala, ${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/Main.scala), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\Users\julie\OneDrive - Ifag Paris\Documents\Atelier Big Data\PS-2024-Projet-Big-Data\target\scala-3.4.0\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\julie\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.4.0\scala3-sbt-bridge-3.4.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 51239f1a for Scala Compiler version 3.4.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\julie\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.4.0\scala3-library_3-3.4.0.jar;C:\Users\julie\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.12\scala-library-2.13.12.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\julie\OneDrive - Ifag Paris\Documents\Atelier Big Data\PS-2024-Projet-Big-Data\target\scala-3.4.0\classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 9.6626191 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Main$package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Main$package[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Main$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Main$package,ModifiedNames(changes = UsedName(Main$package;init;$,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(Main$package,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(Object;init;,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(msg,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hello,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The Main$package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Main$package;init;$,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(Main$package,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(Object;init;,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(msg,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hello,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Main$package)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from hello...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: hello[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(hello,ModifiedNames(changes = UsedName(hello;init;,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(Object;init;,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hello,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The hello has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hello;init;,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName($asInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(Object;init;,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hello,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
